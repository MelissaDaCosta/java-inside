# JMH version: 1.21
# VM version: JDK 13-ea, OpenJDK 64-Bit Server VM, 13-ea+30-Ubuntu-118.04
# VM invoker: /usr/lib/jvm/java-13-openjdk-amd64/bin/java
# VM options: --enable-preview
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: fr.umlv.javainside.lab4.LoggerBenchMark.create_and_disable_logger

# Run progress: 0,00% complete, ETA 00:02:00
# Fork: 1 of 3
# Warmup Iteration   1: 142,750 ns/op
# Warmup Iteration   2: 137,644 ns/op
# Warmup Iteration   3: 135,829 ns/op
# Warmup Iteration   4: 137,241 ns/op
# Warmup Iteration   5: 135,629 ns/op
Iteration   1: 135,626 ns/op
Iteration   2: 135,455 ns/op
Iteration   3: 135,460 ns/op
Iteration   4: 135,496 ns/op
Iteration   5: 135,530 ns/op

# Run progress: 8,33% complete, ETA 00:01:53
# Fork: 2 of 3
# Warmup Iteration   1: 142,609 ns/op
# Warmup Iteration   2: 141,114 ns/op
# Warmup Iteration   3: 139,456 ns/op
# Warmup Iteration   4: 139,459 ns/op
# Warmup Iteration   5: 140,356 ns/op
Iteration   1: 141,575 ns/op
Iteration   2: 141,970 ns/op
Iteration   3: 144,021 ns/op
Iteration   4: 143,986 ns/op
Iteration   5: 149,946 ns/op

# Run progress: 16,67% complete, ETA 00:01:42
# Fork: 3 of 3
# Warmup Iteration   1: 179,282 ns/op
# Warmup Iteration   2: 211,734 ns/op
# Warmup Iteration   3: 315,626 ns/op
# Warmup Iteration   4: 272,885 ns/op
# Warmup Iteration   5: 221,807 ns/op
Iteration   1: 212,947 ns/op
Iteration   2: 191,757 ns/op
Iteration   3: 187,125 ns/op
Iteration   4: 187,909 ns/op
Iteration   5: 187,787 ns/op


Result "fr.umlv.javainside.lab4.LoggerBenchMark.create_and_disable_logger":
  157,773 ±(99.9%) 28,997 ns/op [Average]
  (min, avg, max) = (135,455, 157,773, 212,947), stdev = 27,124
  CI (99.9%): [128,776, 186,770] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13-ea, OpenJDK 64-Bit Server VM, 13-ea+30-Ubuntu-118.04
# VM invoker: /usr/lib/jvm/java-13-openjdk-amd64/bin/java
# VM options: --enable-preview
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: fr.umlv.javainside.lab4.LoggerBenchMark.fast_logger

# Run progress: 25,00% complete, ETA 00:01:32
# Fork: 1 of 3
# Warmup Iteration   1: 0,630 ns/op
# Warmup Iteration   2: 0,579 ns/op
# Warmup Iteration   3: 0,574 ns/op
# Warmup Iteration   4: 0,574 ns/op
# Warmup Iteration   5: 0,583 ns/op
Iteration   1: 0,576 ns/op
Iteration   2: 0,572 ns/op
Iteration   3: 0,842 ns/op
Iteration   4: 0,650 ns/op
Iteration   5: 0,583 ns/op

# Run progress: 33,33% complete, ETA 00:01:22
# Fork: 2 of 3
# Warmup Iteration   1: 0,625 ns/op
# Warmup Iteration   2: 0,587 ns/op
# Warmup Iteration   3: 0,675 ns/op
# Warmup Iteration   4: 0,609 ns/op
# Warmup Iteration   5: 0,588 ns/op
Iteration   1: 0,584 ns/op
Iteration   2: 0,586 ns/op
Iteration   3: 0,581 ns/op
Iteration   4: 0,584 ns/op
Iteration   5: 0,589 ns/op

# Run progress: 41,67% complete, ETA 00:01:12
# Fork: 3 of 3
# Warmup Iteration   1: 0,629 ns/op
# Warmup Iteration   2: 0,589 ns/op
# Warmup Iteration   3: 0,580 ns/op
# Warmup Iteration   4: 0,590 ns/op
# Warmup Iteration   5: 0,578 ns/op
Iteration   1: 0,582 ns/op
Iteration   2: 0,591 ns/op
Iteration   3: 0,587 ns/op
Iteration   4: 0,586 ns/op
Iteration   5: 0,587 ns/op


Result "fr.umlv.javainside.lab4.LoggerBenchMark.fast_logger":
  0,605 ±(99.9%) 0,072 ns/op [Average]
  (min, avg, max) = (0,572, 0,605, 0,842), stdev = 0,068
  CI (99.9%): [0,533, 0,678] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13-ea, OpenJDK 64-Bit Server VM, 13-ea+30-Ubuntu-118.04
# VM invoker: /usr/lib/jvm/java-13-openjdk-amd64/bin/java
# VM options: --enable-preview
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: fr.umlv.javainside.lab4.LoggerBenchMark.no_op

# Run progress: 50,00% complete, ETA 00:01:01
# Fork: 1 of 3
# Warmup Iteration   1: 0,613 ns/op
# Warmup Iteration   2: 0,597 ns/op
# Warmup Iteration   3: 0,586 ns/op
# Warmup Iteration   4: 0,581 ns/op
# Warmup Iteration   5: 0,583 ns/op
Iteration   1: 0,588 ns/op
Iteration   2: 0,595 ns/op
Iteration   3: 0,586 ns/op
Iteration   4: 0,592 ns/op
Iteration   5: 0,588 ns/op

# Run progress: 58,33% complete, ETA 00:00:51
# Fork: 2 of 3
# Warmup Iteration   1: 0,619 ns/op
# Warmup Iteration   2: 0,596 ns/op
# Warmup Iteration   3: 0,581 ns/op
# Warmup Iteration   4: 0,582 ns/op
# Warmup Iteration   5: 0,579 ns/op
Iteration   1: 0,580 ns/op
Iteration   2: 0,605 ns/op
Iteration   3: 0,602 ns/op
Iteration   4: 0,601 ns/op
Iteration   5: 0,589 ns/op

# Run progress: 66,67% complete, ETA 00:00:41
# Fork: 3 of 3
# Warmup Iteration   1: 0,607 ns/op
# Warmup Iteration   2: 0,587 ns/op
# Warmup Iteration   3: 0,580 ns/op
# Warmup Iteration   4: 0,593 ns/op
# Warmup Iteration   5: 0,575 ns/op
Iteration   1: 0,582 ns/op
Iteration   2: 0,594 ns/op
Iteration   3: 0,583 ns/op
Iteration   4: 0,582 ns/op
Iteration   5: 0,577 ns/op


Result "fr.umlv.javainside.lab4.LoggerBenchMark.no_op":
  0,590 ±(99.9%) 0,009 ns/op [Average]
  (min, avg, max) = (0,577, 0,590, 0,605), stdev = 0,009
  CI (99.9%): [0,580, 0,599] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13-ea, OpenJDK 64-Bit Server VM, 13-ea+30-Ubuntu-118.04
# VM invoker: /usr/lib/jvm/java-13-openjdk-amd64/bin/java
# VM options: --enable-preview
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: fr.umlv.javainside.lab4.LoggerBenchMark.simple_logger

# Run progress: 75,00% complete, ETA 00:00:30
# Fork: 1 of 3
# Warmup Iteration   1: 5,122 ns/op
# Warmup Iteration   2: 4,896 ns/op
# Warmup Iteration   3: 4,413 ns/op
# Warmup Iteration   4: 4,348 ns/op
# Warmup Iteration   5: 4,356 ns/op
Iteration   1: 4,355 ns/op
Iteration   2: 4,331 ns/op
Iteration   3: 4,333 ns/op
Iteration   4: 4,371 ns/op
Iteration   5: 4,406 ns/op

# Run progress: 83,33% complete, ETA 00:00:20
# Fork: 2 of 3
# Warmup Iteration   1: 5,128 ns/op
# Warmup Iteration   2: 4,761 ns/op
# Warmup Iteration   3: 4,424 ns/op
# Warmup Iteration   4: 4,391 ns/op
# Warmup Iteration   5: 4,335 ns/op
Iteration   1: 4,387 ns/op
Iteration   2: 4,337 ns/op
Iteration   3: 4,414 ns/op
Iteration   4: 4,365 ns/op
Iteration   5: 4,310 ns/op

# Run progress: 91,67% complete, ETA 00:00:10
# Fork: 3 of 3
# Warmup Iteration   1: 5,066 ns/op
# Warmup Iteration   2: 4,714 ns/op
# Warmup Iteration   3: 4,379 ns/op
# Warmup Iteration   4: 4,339 ns/op
# Warmup Iteration   5: 4,336 ns/op
Iteration   1: 4,345 ns/op
Iteration   2: 4,389 ns/op
Iteration   3: 4,428 ns/op
Iteration   4: 4,446 ns/op
Iteration   5: 4,645 ns/op


Result "fr.umlv.javainside.lab4.LoggerBenchMark.simple_logger":
  4,391 ±(99.9%) 0,086 ns/op [Average]
  (min, avg, max) = (4,310, 4,391, 4,645), stdev = 0,080
  CI (99.9%): [4,305, 4,477] (assumes normal distribution)


# Run complete. Total time: 00:02:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt    Score    Error  Units
LoggerBenchMark.create_and_disable_logger  avgt   15  157,773 ± 28,997  ns/op
LoggerBenchMark.fast_logger                avgt   15    0,605 ±  0,072  ns/op
LoggerBenchMark.no_op                      avgt   15    0,590 ±  0,009  ns/op
LoggerBenchMark.simple_logger              avgt   15    4,391 ±  0,086  ns/op
