# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/local/apps/alternatives/java/jdk-13+33/bin/java
# VM options: --enable-preview
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: fr.umlv.javainside.lab4.LoggerBenchMark.no_op

# Run progress: 0,00% complete, ETA 00:01:00
# Fork: 1 of 3
# Warmup Iteration   1: 0,374 ns/op
# Warmup Iteration   2: 0,375 ns/op
# Warmup Iteration   3: 0,372 ns/op
# Warmup Iteration   4: 0,373 ns/op
# Warmup Iteration   5: 0,371 ns/op
Iteration   1: 0,371 ns/op
Iteration   2: 0,374 ns/op
Iteration   3: 0,371 ns/op
Iteration   4: 0,372 ns/op
Iteration   5: 0,371 ns/op

# Run progress: 16,67% complete, ETA 00:00:51
# Fork: 2 of 3
# Warmup Iteration   1: 0,374 ns/op
# Warmup Iteration   2: 0,374 ns/op
# Warmup Iteration   3: 0,372 ns/op
# Warmup Iteration   4: 0,374 ns/op
# Warmup Iteration   5: 0,375 ns/op
Iteration   1: 0,379 ns/op
Iteration   2: 0,377 ns/op
Iteration   3: 0,373 ns/op
Iteration   4: 0,376 ns/op
Iteration   5: 0,374 ns/op

# Run progress: 33,33% complete, ETA 00:00:40
# Fork: 3 of 3
# Warmup Iteration   1: 0,375 ns/op
# Warmup Iteration   2: 0,375 ns/op
# Warmup Iteration   3: 0,376 ns/op
# Warmup Iteration   4: 0,378 ns/op
# Warmup Iteration   5: 0,378 ns/op
Iteration   1: 0,373 ns/op
Iteration   2: 0,377 ns/op
Iteration   3: 0,381 ns/op
Iteration   4: 0,379 ns/op
Iteration   5: 0,376 ns/op


Result "fr.umlv.javainside.lab4.LoggerBenchMark.no_op":
  0,375 ±(99.9%) 0,004 ns/op [Average]
  (min, avg, max) = (0,371, 0,375, 0,381), stdev = 0,003
  CI (99.9%): [0,371, 0,378] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/local/apps/alternatives/java/jdk-13+33/bin/java
# VM options: --enable-preview
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: fr.umlv.javainside.lab4.LoggerBenchMark.simple_logger

# Run progress: 50,00% complete, ETA 00:00:30
# Fork: 1 of 3
# Warmup Iteration   1: 0,374 ns/op
# Warmup Iteration   2: 0,374 ns/op
# Warmup Iteration   3: 0,372 ns/op
# Warmup Iteration   4: 0,375 ns/op
# Warmup Iteration   5: 0,376 ns/op
Iteration   1: 0,377 ns/op
Iteration   2: 0,378 ns/op
Iteration   3: 0,381 ns/op
Iteration   4: 0,377 ns/op
Iteration   5: 0,378 ns/op

# Run progress: 66,67% complete, ETA 00:00:20
# Fork: 2 of 3
# Warmup Iteration   1: 0,379 ns/op
# Warmup Iteration   2: 0,375 ns/op
# Warmup Iteration   3: 0,374 ns/op
# Warmup Iteration   4: 0,380 ns/op
# Warmup Iteration   5: 0,375 ns/op
Iteration   1: 0,383 ns/op
Iteration   2: 0,379 ns/op
Iteration   3: 0,393 ns/op
Iteration   4: 0,381 ns/op
Iteration   5: 0,381 ns/op

# Run progress: 83,33% complete, ETA 00:00:10
# Fork: 3 of 3
# Warmup Iteration   1: 0,380 ns/op
# Warmup Iteration   2: 0,380 ns/op
# Warmup Iteration   3: 0,382 ns/op
# Warmup Iteration   4: 0,380 ns/op
# Warmup Iteration   5: 0,383 ns/op
Iteration   1: 0,376 ns/op
Iteration   2: 0,374 ns/op
Iteration   3: 0,372 ns/op
Iteration   4: 0,373 ns/op
Iteration   5: 0,381 ns/op


Result "fr.umlv.javainside.lab4.LoggerBenchMark.simple_logger":
  0,379 ±(99.9%) 0,005 ns/op [Average]
  (min, avg, max) = (0,372, 0,379, 0,393), stdev = 0,005
  CI (99.9%): [0,373, 0,384] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      Mode  Cnt  Score   Error  Units
LoggerBenchMark.no_op          avgt   15  0,375 ± 0,004  ns/op
LoggerBenchMark.simple_logger  avgt   15  0,379 ± 0,005  ns/op
