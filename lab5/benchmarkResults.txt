# JMH version: 1.21
# VM version: JDK 13.0.1, OpenJDK 64-Bit Server VM, 13.0.1+9-Ubuntu-218.04
# VM invoker: /usr/lib/jvm/java-13-openjdk-amd64/bin/java
# VM options: --enable-preview
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: fr.umlv.java.inside.StringSwitchBenchmark.stringSwitch1

# Run progress: 0,00% complete, ETA 00:01:30
# Fork: 1 of 3
# Warmup Iteration   1: 0,001 s/op
# Warmup Iteration   2: 0,001 s/op
# Warmup Iteration   3: 0,001 s/op
# Warmup Iteration   4: 0,001 s/op
# Warmup Iteration   5: 0,001 s/op
Iteration   1: 0,001 s/op
Iteration   2: 0,001 s/op
Iteration   3: 0,001 s/op
Iteration   4: 0,001 s/op
Iteration   5: 0,001 s/op

# Run progress: 11,11% complete, ETA 00:01:23
# Fork: 2 of 3
# Warmup Iteration   1: 0,003 s/op
# Warmup Iteration   2: 0,003 s/op
# Warmup Iteration   3: 0,003 s/op
# Warmup Iteration   4: 0,003 s/op
# Warmup Iteration   5: 0,003 s/op
Iteration   1: 0,003 s/op
Iteration   2: 0,003 s/op
Iteration   3: 0,003 s/op
Iteration   4: 0,003 s/op
Iteration   5: 0,003 s/op

# Run progress: 22,22% complete, ETA 00:01:12
# Fork: 3 of 3
# Warmup Iteration   1: 0,001 s/op
# Warmup Iteration   2: 0,001 s/op
# Warmup Iteration   3: 0,001 s/op
# Warmup Iteration   4: 0,001 s/op
# Warmup Iteration   5: 0,001 s/op
Iteration   1: 0,001 s/op
Iteration   2: 0,001 s/op
Iteration   3: 0,001 s/op
Iteration   4: 0,001 s/op
Iteration   5: 0,002 s/op


Result "fr.umlv.java.inside.StringSwitchBenchmark.stringSwitch1":
  0,002 ±(99.9%) 0,001 s/op [Average]
  (min, avg, max) = (0,001, 0,002, 0,003), stdev = 0,001
  CI (99.9%): [0,001, 0,003] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13.0.1, OpenJDK 64-Bit Server VM, 13.0.1+9-Ubuntu-218.04
# VM invoker: /usr/lib/jvm/java-13-openjdk-amd64/bin/java
# VM options: --enable-preview
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: fr.umlv.java.inside.StringSwitchBenchmark.stringSwitch2

# Run progress: 33,33% complete, ETA 00:01:02
# Fork: 1 of 3
# Warmup Iteration   1: 2,461 s/op
# Warmup Iteration   2: 1,809 s/op
# Warmup Iteration   3: 1,666 s/op
# Warmup Iteration   4: 1,743 s/op
# Warmup Iteration   5: 1,872 s/op
Iteration   1: 1,615 s/op
Iteration   2: 1,550 s/op
Iteration   3: 1,618 s/op
Iteration   4: 1,579 s/op
Iteration   5: 1,634 s/op

# Run progress: 44,44% complete, ETA 00:01:01
# Fork: 2 of 3
# Warmup Iteration   1: 2,012 s/op
# Warmup Iteration   2: 1,582 s/op
# Warmup Iteration   3: 1,551 s/op
# Warmup Iteration   4: 1,572 s/op
# Warmup Iteration   5: 1,599 s/op
Iteration   1: 1,529 s/op
Iteration   2: 1,634 s/op
Iteration   3: 2,158 s/op
Iteration   4: 1,826 s/op
Iteration   5: 1,844 s/op

# Run progress: 55,56% complete, ETA 00:00:53
# Fork: 3 of 3
# Warmup Iteration   1: 2,344 s/op
# Warmup Iteration   2: 1,688 s/op
# Warmup Iteration   3: 1,695 s/op
# Warmup Iteration   4: 1,690 s/op
# Warmup Iteration   5: 1,685 s/op
Iteration   1: 1,726 s/op
Iteration   2: 1,965 s/op
Iteration   3: 1,931 s/op
Iteration   4: 1,748 s/op
Iteration   5: 1,710 s/op


Result "fr.umlv.java.inside.StringSwitchBenchmark.stringSwitch2":
  1,738 ±(99.9%) 0,190 s/op [Average]
  (min, avg, max) = (1,529, 1,738, 2,158), stdev = 0,177
  CI (99.9%): [1,548, 1,927] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13.0.1, OpenJDK 64-Bit Server VM, 13.0.1+9-Ubuntu-218.04
# VM invoker: /usr/lib/jvm/java-13-openjdk-amd64/bin/java
# VM options: --enable-preview
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: fr.umlv.java.inside.StringSwitchBenchmark.stringSwitch3

# Run progress: 66,67% complete, ETA 00:00:42
# Fork: 1 of 3
# Warmup Iteration   1: 3,943 s/op
# Warmup Iteration   2: 16,684 s/op
# Warmup Iteration   3: 8,399 s/op
# Warmup Iteration   4: 14,930 s/op
# Warmup Iteration   5: 15,212 s/op
Iteration   1: 13,773 s/op
Iteration   2: 13,747 s/op
Iteration   3: 13,574 s/op
Iteration   4: 13,775 s/op
Iteration   5: 13,722 s/op

# Run progress: 77,78% complete, ETA 00:01:00
# Fork: 2 of 3
# Warmup Iteration   1: 2,993 s/op
# Warmup Iteration   2: 9,696 s/op
# Warmup Iteration   3: 13,877 s/op
# Warmup Iteration   4: 13,826 s/op
# Warmup Iteration   5: 13,927 s/op
Iteration   1: 13,859 s/op
Iteration   2: 13,542 s/op
Iteration   3: 13,701 s/op
Iteration   4: 13,688 s/op
Iteration   5: 13,775 s/op

# Run progress: 88,89% complete, ETA 00:00:42
# Fork: 3 of 3
# Warmup Iteration   1: 4,369 s/op
# Warmup Iteration   2: 15,424 s/op
# Warmup Iteration   3: 15,133 s/op
# Warmup Iteration   4: 15,688 s/op
# Warmup Iteration   5: 16,297 s/op
Iteration   1: 20,610 s/op
Iteration   2: 28,283 s/op
Iteration   3: 16,521 s/op
Iteration   4: 16,137 s/op
Iteration   5: 17,069 s/op


Result "fr.umlv.java.inside.StringSwitchBenchmark.stringSwitch3":
  15,718 ±(99.9%) 4,282 s/op [Average]
  (min, avg, max) = (13,542, 15,718, 28,283), stdev = 4,006
  CI (99.9%): [11,436, 20,001] (assumes normal distribution)


# Run complete. Total time: 00:08:22

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                            Mode  Cnt   Score   Error  Units
StringSwitchBenchmark.stringSwitch1  avgt   15   0,002 ± 0,001   s/op
StringSwitchBenchmark.stringSwitch2  avgt   15   1,738 ± 0,190   s/op
StringSwitchBenchmark.stringSwitch3  avgt   15  15,718 ± 4,282   s/op
